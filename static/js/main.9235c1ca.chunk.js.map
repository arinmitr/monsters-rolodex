{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","res","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCHbC,EAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJdO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC4BCG,G,wDA9Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEf,SAAUc,S,oBAE/C,WAAU,IAAD,SAC2BE,KAAKR,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZQ,EAAmBjB,EAASkB,QAAO,SAACxB,GAAD,OACvCA,EAAQG,KAAKsB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAK3B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAACiB,GAAD,OAAO,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUvB,SAAUiB,W,GAzBVO,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9235c1ca.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList = (props) => (\r\n    <div className='card-list'>\r\n    {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster}></Card>\r\n    ))}\r\n    </div>\r\n)","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n    className='search'\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n    />\r\n)","import React, { Component } from 'react'\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\nimport './App.css'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((res) => res.json())\n      .then((users) => this.setState({ monsters: users }))\n  }\n  render() {\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='search monsters'\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}